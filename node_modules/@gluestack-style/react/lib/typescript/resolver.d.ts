import type { CSSObject, ITheme, OrderedSXResolved, Path, StyledResolved, StyledValue, SX, SXResolved, StyleIds } from './types';
export declare function checkAndPush(item: any, ret: any, keyToCheck: any): void;
export declare function getComponentResolved(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getDescendantResolved(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getComponentResolvedBaseStyle(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getComponentResolvedVariantStyle(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getDescendantResolvedBaseStyle(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getDescendantResolvedVariantStyle(orderedResolved: OrderedSXResolved): import("./types").StyledValueResolvedWithMeta[];
export declare function getComponentStyleIds(arr: OrderedSXResolved): StyleIds;
export declare function getDescendantStyleIds(arr: any, descendantStyle?: any): StyleIds;
export declare function sxToSXResolved(sx: SX, path: Path | undefined, meta: any, CONFIG: any): SXResolved;
export declare function StyledValueToCSSObject(input: StyledValue | undefined, CONFIG: any): CSSObject;
export declare function SXResolvedToOrderedSXResolved(sxResolved: SXResolved): OrderedSXResolved;
export declare function styledToStyledResolved<Variants, P>(styled: ITheme<Variants, P>, path: Path | undefined, CONFIG: any): StyledResolved;
export declare function styledResolvedToOrderedSXResolved(styledResolved: StyledResolved): OrderedSXResolved;
export declare function getStyleIds(orderedResolved: OrderedSXResolved, componentStyleConfig: any): {
    component: StyleIds;
    descendant: StyleIds;
};
//# sourceMappingURL=resolver.d.ts.map