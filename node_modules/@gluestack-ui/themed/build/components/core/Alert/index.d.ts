/// <reference types="react" />
export declare const Alert: import("@gluestack-ui/alert/lib/typescript/types").IAlertComponentType<Omit<import("react-native").ViewProps, "action" | "variant"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, {
    action: {
        error: unknown;
        warning: unknown;
        success: unknown;
        info: unknown;
        muted: unknown;
    };
    variant: {
        solid: unknown;
        outline: unknown;
        accent: unknown;
    };
}, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>, Omit<Omit<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>, "size"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
    };
}, Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>>;
export declare const AlertText: (props: Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>) => JSX.Element;
export declare const AlertIcon: (props: Omit<Omit<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>, "size"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
    };
}, Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>) => JSX.Element;
