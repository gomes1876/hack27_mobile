/// <reference types="react" />
export declare const Slider: import("@gluestack-ui/slider/lib/typescript/types").ISliderComponentType<Omit<import("react-native").ViewProps, "size" | "orientation" | "isReversed"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, {
    orientation: {
        horizontal: unknown;
        vertical: unknown;
    };
    isReversed: {
        true: unknown;
        false: unknown;
    };
    size: {
        sm: unknown;
        md: unknown;
        lg: unknown;
    };
}, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "variant"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), {
    variant: {
        horizontal: unknown;
        vertical: unknown;
    };
}, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>>;
export declare const SliderThumb: import("react").MemoExoticComponent<(props: Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@gluestack-ui/slider/lib/typescript/types").ISliderThumbProps) => JSX.Element>;
export declare const SliderTrack: import("react").MemoExoticComponent<(props: Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "variant"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), {
    variant: {
        horizontal: unknown;
        vertical: unknown;
    };
}, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@gluestack-ui/slider/lib/typescript/types").ISliderTrackProps) => JSX.Element>;
export declare const SliderFilledTrack: import("react").MemoExoticComponent<(props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps> & import("@gluestack-ui/slider/lib/typescript/types").ISliderTrackFilledProps) => JSX.Element>;
