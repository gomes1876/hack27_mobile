/// <reference types="react" />
export declare const Radio: import("@gluestack-ui/radio/lib/typescript/types").IRadioComponentType<Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "size"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), {
    size: {
        lg: unknown;
        md: unknown;
        sm: unknown;
    };
}, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<Omit<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>>;
export declare const RadioGroup: (props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps> & import("@gluestack-ui/radio/lib/typescript/types").IRadioGroupProps) => JSX.Element;
export declare const RadioIcon: (props: Omit<Omit<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<Omit<Omit<any, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, unknown, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>>) => JSX.Element;
export declare const RadioIndicator: (props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>) => JSX.Element;
export declare const RadioLabel: (props: Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>) => JSX.Element;
