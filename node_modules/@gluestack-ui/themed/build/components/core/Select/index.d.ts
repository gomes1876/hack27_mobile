/// <reference types="react" />
export declare const Select: import("@gluestack-ui/select/lib/typescript/types").ISelectComponentType<Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "size" | "variant"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), {
    size: {
        xl: unknown;
        lg: unknown;
        md: unknown;
        sm: unknown;
    };
    variant: {
        underlined: unknown;
        outline: unknown;
        rounded: unknown;
    };
}, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, Omit<import("react-native").TextInputProps, "placeholderTextColor"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, {
    placeholderTextColor: {
        [x: string]: {};
    };
}, import("react-native").TextInputProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextInputProps>, Omit<Omit<any, "size"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
    };
}, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetProps, Omit<Omit<import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>) | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>))) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>) | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>))) | null | undefined>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>>, Omit<Omit<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetContentProps, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>, Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetItemProps, Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>, Omit<import("react-native").ScrollViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ScrollViewProps>, Omit<import("react-native").VirtualizedListProps<unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").VirtualizedListProps<unknown>>, Omit<import("react-native").FlatListProps<unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").FlatListProps<unknown>>, Omit<import("react-native").SectionListProps<unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").SectionListProps<unknown, unknown>>, Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>>;
export declare const SelectTrigger: (props: Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, "size" | "variant"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), {
    size: {
        xl: unknown;
        lg: unknown;
        md: unknown;
        sm: unknown;
    };
    variant: {
        underlined: unknown;
        outline: unknown;
        rounded: unknown;
    };
}, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>) => JSX.Element;
export declare const SelectInput: (props: Omit<import("react-native").TextInputProps, "placeholderTextColor"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, {
    placeholderTextColor: {
        [x: string]: {};
    };
}, import("react-native").TextInputProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextInputProps>) => JSX.Element;
export declare const SelectIcon: (props: Omit<Omit<any, "size"> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<any, {
    size: {
        xs: unknown;
        sm: unknown;
        md: unknown;
        lg: unknown;
        xl: unknown;
    };
}, any>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<any>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<any>) => JSX.Element;
export declare const SelectPortal: (props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetProps) => JSX.Element;
export declare const SelectBackdrop: (props: Omit<Omit<import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>) | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>))) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>) | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>))) | null | undefined>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").Animated.AnimatedProps<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<import("react").ForwardRefExoticComponent<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>, import("react-native").ViewStyle | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, unknown, unknown>>) => JSX.Element;
export declare const SelectContent: (props: Omit<Omit<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetContentProps) => JSX.Element;
export declare const SelectDragIndicator: (props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>) => JSX.Element;
export declare const SelectDragIndicatorWrapper: (props: Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ViewProps>) => JSX.Element;
export declare const SelectItem: (props: import("@gluestack-ui/select/lib/typescript/types").ISelectItemProps & Omit<Omit<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>), unknown, import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle> | ((state: import("react-native").PressableStateCallbackType) => import("react-native").StyleProp<import("react-native").ViewStyle>)>> & {
    as?: any;
}, "ref"> & import("react").RefAttributes<import("react-native").PressableProps & import("react").RefAttributes<import("react-native").View>> & import("@gluestack-ui/actionsheet/lib/typescript/types").InterfaceActionsheetItemProps) => JSX.Element;
export declare const SelectItemText: (props: Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>) => JSX.Element;
export declare const SelectScrollView: (props: Omit<import("react-native").ScrollViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ScrollViewProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").ScrollViewProps>) => JSX.Element;
export declare const SelectVirtualizedList: (props: Omit<import("react-native").VirtualizedListProps<unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").VirtualizedListProps<unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").VirtualizedListProps<unknown>>) => JSX.Element;
export declare const SelectFlatList: (props: Omit<import("react-native").FlatListProps<unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").FlatListProps<unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").FlatListProps<unknown>>) => JSX.Element;
export declare const SelectSectionList: (props: Omit<import("react-native").SectionListProps<unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").SectionListProps<unknown, unknown>>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").SectionListProps<unknown, unknown>>) => JSX.Element;
export declare const SelectSectionHeaderText: (props: Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps>> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
} & import("react").RefAttributes<import("react-native").TextProps>) => JSX.Element;
